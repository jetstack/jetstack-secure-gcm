timeout: 1800s # 30m
substitutions:
  _CLUSTER_NAME: cluster-1
  _CLUSTER_LOCATION: europe-west2-b
steps:
  - id: pull-ubbagent
    name: gcr.io/cloud-builders/docker
    args:
      - pull
      - gcr.io/cloud-marketplace-tools/metering/ubbagent:latest
    waitFor: ["-"]

  - id: tag-ubbagent
    name: gcr.io/cloud-builders/docker
    args:
      - tag
      - gcr.io/cloud-marketplace-tools/metering/ubbagent:latest
      - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/ubbagent:build-${BRANCH_NAME}-${SHORT_SHA}
    waitFor: ["pull-ubbagent"]

  - id: push-ubbagent
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/ubbagent:build-${BRANCH_NAME}-${SHORT_SHA}
    waitFor: ["tag-ubbagent"]

  - id: build-smoke-test
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - -f
      - "smoke-test.Dockerfile"
      - --tag
      - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/smoke-test:build-${BRANCH_NAME}-${SHORT_SHA}
      - "."
    waitFor: ["-"]

  - id: push-smoke-test
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/smoke-test:build-${BRANCH_NAME}-${SHORT_SHA}
    waitFor:
      - build-smoke-test

  - id: set-data-test-schema-default-values
    name: gcr.io/cloud-marketplace-tools/k8s/dev
    entrypoint: bash
    args:
      - -exc
      - |
        cat data-test/schema.yaml | env -i \
          IMAGE=gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/smoke-test:build-${BRANCH_NAME}-${SHORT_SHA}
        envsubst | tee /dev/stderr > /tmp/schema.yaml && mv /tmp/schema.yaml data-test/schema.yaml
    waitFor:
      - "-"

  - id: build-deployer
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --tag
      - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/deployer:build-${BRANCH_NAME}-${SHORT_SHA}
      - "."
    waitFor: ["set-data-test-schema-default-values"]

  - id: push-deployer
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/deployer:build-${BRANCH_NAME}-${SHORT_SHA}
    waitFor:
      - build-deployer

  # The tag deployer:1.1 (for example) is the actual "important" image
  # since it is the one that will be used in the Marketplace UI.
  #
  # We do not retag and push the deployer:1.1 as part of this cloudbuild
  # since this cloudbuild is meant for building the

  - id: gcloud-credentials
    name: gcr.io/cloud-builders/gcloud
    waitFor:
      - "-"
    entrypoint: bash
    args:
      - -exc
      - |
        gcloud container clusters get-credentials '${_CLUSTER_NAME}' --zone '${_CLUSTER_LOCATION}' --project '$PROJECT_ID'
        mkdir -p /workspace/.kube/
        cp -r $$HOME/.kube/ /workspace/
        mkdir -p /workspace/.config/gcloud/
        cp -r $$HOME/.config/gcloud/ /workspace/.config/

  - id: install-app-crds
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -exc
      - kubectl apply -f "https://raw.githubusercontent.com/GoogleCloudPlatform/marketplace-k8s-app-tools/master/crd/app-crd.yaml"
    waitFor:
      - "gcloud-credentials"

  - id: install-cloud-marketplace-tools
    name: gcr.io/cloud-builders/docker
    args:
      - run
      - --volume
      - /workspace:/workspace
      - gcr.io/cloud-marketplace-tools/k8s/dev
      - sh
      - -c
      - |
        cat /scripts/dev > "/workspace/mpdev"
        chmod +x /workspace/mpdev
    waitFor: ["-"]

  - id: check-cloud-marketplace-tools
    name: gcr.io/cloud-marketplace-tools/k8s/dev
    env:
      - "KUBE_CONFIG=/workspace/.kube"
      - "GCLOUD_CONFIG=/workspace/.config/gcloud"
      # Use local Docker network named cloudbuild as described here:
      # https://cloud.google.com/cloud-build/docs/overview#build_configuration_and_build_steps
      - "EXTRA_DOCKER_PARAMS=--net cloudbuild"
    args:
      - ./mpdev
      - doctor
    waitFor:
      - gcloud-credentials
      - install-cloud-marketplace-tools
      - install-app-crds

  - id: logs-deployer
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -exc
      - |
        while : ; do
          kubectl get ns -oname 2>/dev/null | grep apptest- && break
          sleep 10
        done
        ns=$(kubectl get ns -oname  | grep apptest- | cut -d/ -f2)

        while : ; do
          kubectl -n "$ns" get pods -oname 2>/dev/null | grep "apptest-.*-deployer" && break
          sleep 10
        done
        pod=$(kubectl -n "$ns" get pods -oname | grep "apptest-.*-deployer" | cut -d/ -f2)

        kubectl wait -n "$ns" --for=condition=ready --timeout=5m pod $pod
        kubectl logs -n "$ns" $pod -f --tail=-1
    waitFor:
      - check-cloud-marketplace-tools
      - push-deployer

  - id: logs-smoke-test
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -exc
      - |
        while : ; do
          kubectl get ns -oname 2>/dev/null | grep apptest- && break
          sleep 10
        done
        ns=$(kubectl get ns -oname  | grep apptest- | cut -d/ -f2)

        while : ; do
          kubectl -n "$ns" get pods -oname | grep "smoke-test-pod" && break
          sleep 10
          done

        kubectl wait -n "$ns" --for=condition=ready --timeout=5m pod smoke-test-pod
        kubectl logs -n "$ns" smoke-test-pod -f --tail=-1
    waitFor:
      - check-cloud-marketplace-tools
      - push-smoke-test

  - id: verify
    name: gcr.io/cloud-marketplace-tools/k8s/dev
    env:
      - "KUBE_CONFIG=/workspace/.kube"
      - "GCLOUD_CONFIG=/workspace/.config/gcloud"
      # Use local Docker network named cloudbuild as described here:
      # https://cloud.google.com/cloud-build/docs/overview#build_configuration_and_build_steps
      - "EXTRA_DOCKER_PARAMS=--net cloudbuild"
    args:
      - ./mpdev
      - verify
      - --wait_timeout=99999999
      - --deployer=gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/deployer:build-${BRANCH_NAME}-${SHORT_SHA}
    waitFor:
      - check-cloud-marketplace-tools
      - push-deployer
      - push-ubbagent
      - push-smoke-test

  - id: publish
    name: gcr.io/cloud-marketplace-tools/k8s/dev
    env:
      - "KUBE_CONFIG=/workspace/.kube"
      - "GCLOUD_CONFIG=/workspace/.config/gcloud"
      - "EXTRA_DOCKER_PARAMS=--net cloudbuild"
    args:
      - ./mpdev
      - publish
      - --gcs_repo=gs://$PROJECT_ID
      - --deployer_image=gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/deployer:build-${BRANCH_NAME}-${SHORT_SHA}
    waitFor:
      - verify

images:
  - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/deployer:build-${BRANCH_NAME}-${SHORT_SHA}
  - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/ubbagent:build-${BRANCH_NAME}-${SHORT_SHA}
  - gcr.io/$PROJECT_ID/jetstack-secure-for-cert-manager/smoke-test:build-${BRANCH_NAME}-${SHORT_SHA}
