# This smoke test manifest is used in the smoke-test image to run the test
# suite. The testrunner is run in smoke-test.Dockerfile.
#
# To see how this testrunner works, the only way is to read the bash.go:
# https://github.com/GoogleCloudPlatform/marketplace-testrunner/blob/4245fa9/tests/bash.go
actions:
  # - name: hang for debugging purposes
  #   bashTest:
  #     script: sleep 1200 # 20 minutes
  - name: kubectl smoke test
    bashTest:
      script: kubectl version
      expect:
        exitCode:
          equals: 0
  - name: Create test issuer and self signed cert
    bashTest:
      script: |
        kubectl apply -n ${NAMESPACE} -f - <<EOF
        apiVersion: cert-manager.io/v1alpha2
        kind: Issuer
        metadata:
          name: selfsigned-issuer
        spec:
          selfSigned: {}
        ---
        apiVersion: cert-manager.io/v1alpha2
        kind: Certificate
        metadata:
          name: selfsigned-cert
        spec:
          dnsNames:
            - example.com
          secretName: selfsigned-cert-tls
          issuerRef:
            name: selfsigned-issuer
        EOF
      expect:
        equals: 0
  - name: Try to get new cert
    bashTest:
      script: |
        timeout 60 bash -c '
          until ( kubectl get Certificate selfsigned-cert \
                  -o=jsonpath='{.status.conditions[0].status}' \
                  | grep -qz True);
            do sleep 2;
          done'
      expect:
        exitCode:
          equals: 0
  - name: Try to get cert secret
    bashTest:
      script: |
        kubectl get secret selfsigned-cert-tls
      expect:
        exitCode:
          equals: 0
  - name: Delete issuer and self signed cert
    bashTest:
      script: |
        set -ex
        kubectl delete -n ${NAMESPACE} issuer selfsigned-issuer
        kubectl delete -n ${NAMESPACE} certificate selfsigned-cert
      expect:
        exitCode:
          equals: 0
  - name: Create a GoogleCASIssuer and a certificate
    bashTest:
      script: |
        kubectl apply -n ${NAMESPACE} -f - <<EOF
        apiVersion: cas-issuer.jetstack.io/v1alpha1
        kind: GoogleCASIssuer
        metadata:
          name: googlecas-issuer
        spec:
          project: "todo"
          location: "todo"
          certificateAuthorityID: "todo"
        ---
        apiVersion: cert-manager.io/v1
        kind: Certificate
        metadata:
          name: googlecas-cert
        spec:
          secretName: demo-cert-tls
          commonName: cert-manager.io.demo
          dnsNames:
            - cert-manager.io
            - jetstack.io
          duration: 24h
          renewBefore: 8h
          issuerRef:
            group: cas-issuer.jetstack.io
            kind: GoogleCASIssuer
            name: googlecas-issuer
        EOF
      expect:
        exitCode:
          equals: 0

  # We don't know yet how, as part of this smoke test file, to create a GCP
  # service account and then create a Kubernetes service account and bind
  # the two together using the "workload identity" feature.
  #
  # Right now, the above GoogleCASIssuer does nothing, and the certificate
  # will never be created.
  - name: Delete google CAS issuer and certificate
    bashTest:
      script: |
        set -ex
        kubectl delete -n ${NAMESPACE} googlecasissuer googlecas-issuer
        kubectl delete -n ${NAMESPACE} certificate googlecas-cert
      expect:
        exitCode:
          equals: 0
