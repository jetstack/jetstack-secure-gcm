# This smoke test manifest is used in the smoke-test image to run the test
# suite. See /smoke-test/Dockerfile.
actions:
  - name: kubectl smoke test
    bashTest:
      script: kubectl version
      expect:
        exitCode:
          equals: 0
  - name: gcloud smoke test
    bashTest:
      script: gcloud version
      expect:
        exitCode:
          equals: 0
  - name: gcloud smoke test
    bashTest:
      script: |
         export GOOGLE_APPLICATION_CREDENTIALS=/etc/credentials.json
         gcloud iam service-accounts add-iam-policy-binding sa-google-cas-issuer@$(gcloud config get-value project | tr ':' '/').iam.gserviceaccount.com \
           --role roles/iam.workloadIdentityUser \
           --member "serviceAccount:$(gcloud config get-value project | tr ':' '/').svc.id.goog[test-ns/test-google-cas-issuer-serviceaccount-name]"

  - name: Create test issuer and self signed cert
    bashTest:
      script: |
        kubectl apply --namespace ${NAMESPACE} -f - <<EOF
        apiVersion: cert-manager.io/v1alpha2
        kind: Issuer
        metadata:
          name: test-selfsigned
        spec:
          selfSigned: {}
        ---
        apiVersion: cert-manager.io/v1alpha2
        kind: Certificate
        metadata:
          name: selfsigned-cert
        spec:
          dnsNames:
            - example.com
          secretName: selfsigned-cert-tls
          issuerRef:
            name: test-selfsigned
        EOF
      expect:
        exitCode:
          equals: 0
  - name: Try to get new cert
    bashTest:
      script: |
        timeout 60 bash -c '
          until ( kubectl get Certificate selfsigned-cert \
                  -o=jsonpath='{.status.conditions[0].status}' \
                  | grep -qz True);
            do sleep 2;
          done'
      expect:
        exitCode:
          equals: 0
  - name: Try to get cert secret
    bashTest:
      script: |
        kubectl get secret selfsigned-cert-tls
      expect:
        exitCode:
          equals: 0
  - name: Delete issuer and self signed cert
    bashTest:
      script: |
        kubectl delete --namespace ${NAMESPACE} -f - <<EOF
        apiVersion: cert-manager.io/v1alpha2
        kind: Issuer
        metadata:
          name: test-selfsigned
        spec:
          selfSigned: {}
        ---
        apiVersion: cert-manager.io/v1alpha2
        kind: Certificate
        metadata:
          name: selfsigned-cert
        spec:
          dnsNames:
            - example.com
          secretName: selfsigned-cert-tls
          issuerRef:
            name: test-selfsigned
        EOF
      expect:
        exitCode:
          equals: 0
  - name: Create a certificate using the googlecasissuer bundled with the Jetstack Secure Marketplace application
    bashTest:
      script: |
        kubectl apply --namespace ${NAMESPACE} -f - <<EOF
        apiVersion: cert-manager.io/v1
        kind: Certificate
        metadata:
          name: demo-certificate
        spec:
          secretName: google-cas-cert-tls
          commonName: cert-manager.io.demo
          dnsNames:
            - cert-manager.io
          duration: 24h
          renewBefore: 8h
          issuerRef:
            group: cas-issuer.jetstack.io
            kind: GoogleCASIssuer
            name: default
        EOF
      expect:
        exitCode:
          equals: 0
  - name: Try to get the cert secret
    bashTest:
      script: |
        kubectl get secret google-cas-cert-tls
      expect:
        exitCode:
          equals: 0
---

