# Schema.yaml reference::
# https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/8bc78db/docs/schema.md
#
# Example:
# https://github.com/GoogleCloudPlatform/marketplace-k8s-app-example/blob/8bc78db/wordpress-updatable/versions/0.1.4/schema.yaml

x-google-marketplace:
  schemaVersion: v2
  applicationApiVersion: v1beta1

  # We are not "truely" following semver.org since we use a "-" for a final
  # release ("-" is meant for pre-releases). This is due to a Docker
  # limitation: https://github.com/distribution/distribution/issues/1201
  #
  # Important: it must have the same value as the version in the
  # Application manifest.
  publishedVersion: 1.3.1-gcm.0
  publishedVersionMetadata:
    releaseNote: >-
      Initial release.
    # Means that this upgrade is very much encouraged (e.g. security reasons)
    recommended: true

  # Image declaration is required here. Refer to the Images section below.
  images:
    "": # This is cert-manager-controller.
      properties:
        cert-manager.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.image.tag:
          type: TAG
    cert-manager-webhook:
      properties:
        cert-manager.webhook.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.webhook.image.tag:
          type: TAG
    cert-manager-acmesolver:
      properties:
        cert-manager.acmesolver.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.webhook.image.tag:
          type: TAG
    cert-manager-cainjector:
      properties:
        cert-manager.cainjector.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.cainjector.image.tag:
          type: TAG
    cert-manager-google-cas-issuer:
      properties:
        google-cas-issuer.image.repository:
          type: REPO_WITH_REGISTRY
        google-cas-issuer.image.tag:
          type: TAG
    preflight:
      properties:
        preflight.image.repository:
          type: REPO_WITH_REGISTRY
        preflight.image.tag:
          type: TAG
    ubbagent:
      properties:
        cert-manager.ubbagent.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.ubbagent.image.tag:
          type: TAG

  # Allow the deployer to create CRDs and webhook configurations. See:
  # https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/master/docs/schema.md#deployerserviceaccount
  deployerServiceAccount:
    # Note: the created serviceaccount is "{{.Release.Name}}-deployer-sa".
    description: >
      Creates app resources, (among others) the Certificate CRD.
    roles:
      - type: ClusterRole
        rulesType: CUSTOM
        rules:
          - apiGroups: ["apiextensions.k8s.io"]
            resources: ["customresourcedefinitions"]
            verbs: ["*"]
          - apiGroups: ["admissionregistration.k8s.io"]
            resources: ["*"]
            verbs: ["*"]
            # Although the deployer does not create RBAC objets, it still
            # needs to be able to list them.
          - apiGroups: ["rbac.authorization.k8s.io"]
            resources: ["clusterrolebindings", "clusterroles", "rolebindings", "roles"]
            verbs: ["list", "get"]

# The Properties and Required sections of v2 are structured the same as those of v1.
properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME
  namespace:
    type: string
    default: jetstack-secure
    x-google-marketplace:
      type: NAMESPACE
  cert-manager.serviceAccount.name:
    type: string
    title: Name of the Kubernetes service account for the cert-manager controller
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by cert-manager Controller Deployment
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              # Issuer controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["issuers", "issuers/status"]
                verbs: ["update"]
              - apiGroups: ["cert-manager.io"]
                resources: ["issuers"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch", "create", "update", "delete"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # ClusterIssuer controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["clusterissuers", "clusterissuers/status"]
                verbs: ["update"]
              - apiGroups: ["cert-manager.io"]
                resources: ["clusterissuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch", "create", "update", "delete"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # Certificates controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
                verbs: ["update"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates/finalizers", "certificaterequests/finalizers"]
                verbs: ["update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders"]
                verbs: ["create", "delete", "get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch", "create", "update", "delete"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # Orders controller role
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders", "orders/status"]
                verbs: ["update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders", "challenges"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["cert-manager.io"]
                resources: ["clusterissuers", "issuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges"]
                verbs: ["create", "delete"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders/finalizers"]
                verbs: ["update"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # Challenges controller role
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges", "challenges/status"]
                verbs: ["update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["cert-manager.io"]
                resources: ["issuers", "clusterissuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              - apiGroups: [""]
                resources: ["pods", "services"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: ["extensions"]
                resources: ["ingresses"]
                verbs: ["get", "list", "watch", "create", "delete", "update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges/finalizers"]
                verbs: ["update"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              # ingress-shim controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests"]
                verbs: ["create", "update", "delete"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
                verbs: ["get", "list", "watch"]
              # To be removed when this gets merged: https://github.com/jetstack/cert-manager/issues/3726
              - apiGroups: ["extensions"]
                resources: ["ingresses"]
                verbs: ["get", "list", "watch"]
              # To be removed when this gets merged: https://github.com/jetstack/cert-manager/issues/3726
              - apiGroups: ["extensions"]
                resources: ["ingresses/finalizers"]
                verbs: ["update"]
              - apiGroups: ["networking.k8s.io"]
                resources: ["ingresses/finalizers"]
                verbs: ["update"]
              - apiGroups: ["networking.k8s.io"]
                resources: ["ingresses"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              - apiGroups: [""]
                resources: ["configmaps"]
                verbs: ["get", "create", "update", "patch"]
              - apiGroups: ["cert-manager.io"]
                resources: ["signers"]
                verbs: ["approve"]
                resourceNames:
                  - "issuers.cert-manager.io/*"
                  - "clusterissuers.cert-manager.io/*"
                  # Approval API, see https://github.com/jetstack/google-cas-issuer/pull/34/files#diff-80390a
                  - googlecasclusterissuers.cas-issuer.jetstack.io/*
                  - googlecasissuers.cas-issuer.jetstack.io/*

              # Added in https://github.com/jetstack/cert-manager/pull/4064
              - apiGroups: ["certificates.k8s.io"]
                resources: ["certificatesigningrequests"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: ["certificates.k8s.io"]
                resources: ["certificatesigningrequests/status"]
                verbs: ["update"]
              - apiGroups: ["certificates.k8s.io"]
                resources: ["signers"]
                resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
                verbs: ["sign"]
              - apiGroups: ["authorization.k8s.io"]
                resources: ["subjectaccessreviews"]
                verbs: ["create"]

  cert-manager.webhook.serviceAccount.name:
    type: string
    title: Name of the Kubernetes service account for the cert-manager webhook
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by cert-manager Webhook Deployment
        roles:
          - type: Role
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: [secrets]
                verbs: [get, list, watch, update, patch, create]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: ["authorization.k8s.io"]
                resources: ["subjectaccessreviews"]
                verbs: ["create"]

  cert-manager.cainjector.serviceAccount.name:
    type: string
    title: Name of the Kubernetes service account for the cert-manager cainjector
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by cert-manager CA Injector Deployment
        roles:
          - type: Role
            rulesType: CUSTOM
            rules:
              # Leader election roles.
              - apiGroups: [""]
                resources: [configmaps]
                verbs: [get, list, watch, create, update, patch, delete]
              - apiGroups: [""]
                resources: [configmaps/status]
                verbs: [get, update, patch]
              - apiGroups: [""]
                resources: [events]
                verbs: [create]
              - apiGroups: [coordination.k8s.io]
                resources: [leases]
                verbs: [create, get, list, update]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["get", "create", "update", "patch"]
              - apiGroups: ["admissionregistration.k8s.io"]
                resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: ["apiregistration.k8s.io"]
                resources: ["apiservices"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: ["apiextensions.k8s.io"]
                resources: ["customresourcedefinitions"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: [""]
                resources: ["configmaps"]
                verbs: ["get", "create", "update", "patch"]

  google-cas-issuer.serviceAccount.name:
    type: string
    title: Name of the Kubernetes service account for the google-cas-issuer
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by google-cas-issuer
        roles:
          - type: Role
            rulesType: CUSTOM
            rules:
              # Leader election roles.
              - apiGroups: [""]
                resources: [configmaps]
                verbs: [get, list, watch, create, update, patch, delete]
              - apiGroups: [""]
                resources: [configmaps/status]
                verbs: [get, update, patch]
              - apiGroups: [""]
                resources: [events]
                verbs: [create]
              - apiGroups: [coordination.k8s.io]
                resources: [leases]
                verbs: [create, get, list, update]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: [events]
                verbs: [create, patch]
              - apiGroups: [""]
                resources: [secrets]
                verbs: [get, list, watch]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasclusterissuers]
                verbs: [create, delete, get, list, patch, update, watch]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasclusterissuers/status]
                verbs: [get, patch, update]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasissuers]
                verbs: [create, delete, get, list, patch, update, watch]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasissuers/status]
                verbs: [get, patch, update]
              - apiGroups: [cert-manager.io]
                resources: [certificaterequests]
                verbs: [get, list, update, watch]
              - apiGroups: [cert-manager.io]
                resources: [certificaterequests/status]
                verbs: [get, patch, update]

  preflight.serviceAccount.name:
    type: string
    title: Name of the Kubernetes service account for the Jetstack Secure agent
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by the Jetstack Secure Platform agent
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              # The jetstack secure agent gathers services for pod readiness
              # probe rules.
              - apiGroups: [""]
                resources: ["services", "pods"]
                verbs: ["get", "list"]
              # The jetstack secure agent gathers higher level resources to
              # ensure data to determine ownership is present.
              - apiGroups: ["apps"]
                resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
                verbs: ["get", "list"]
              - apiGroups: ["batch"]
                resources: ["jobs", "cronjobs"]
                verbs: ["get", "list"]
              # The jetstack secure agent gathers resources for cert-manager package.
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list"]
              - apiGroups: ["networking.k8s.io"]
                resources: ["ingresses"]
                verbs: ["get", "list"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
                verbs: ["get", "list"]
              - apiGroups: ["cas-issuer.jetstack.io"]
                resources: ["googlecasissuers", "googlecasclusterissuers"]
                verbs: ["get", "list"]
              - apiGroups: ["admissionregistration.k8s.io"]
                resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
                verbs: ["get", "list"]

  # https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/64181be/docs/billing-integration.md
  cert-manager.ubbagent.reportingSecretName:
    type: string
    x-google-marketplace:
      type: REPORTING_SECRET

  deployerImage:
    type: string
    x-google-marketplace:
      type: DEPLOYER_IMAGE

required:
  - name
  - namespace
