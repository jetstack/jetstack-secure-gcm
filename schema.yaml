# https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/master/docs/schema.md
x-google-marketplace:
  schemaVersion: v2

  # MUST match the version of the Application custom resource object.
  # This is the same as the top level applicationApiVersion field in v1.
  applicationApiVersion: v1beta1

  # The release version is required in the schema and MUST match the
  # release tag on the the deployer.
  publishedVersion: "1.0.0"
  publishedVersionMetadata:
    releaseNote: >-
      Initial release.
    # releaseTypes list is optional.
    # "Security" should only be used if this is an important update to patch
    # an existing vulnerability, as such updates will display more prominently for users.
    releaseTypes:
      - Feature
      - BugFix
      - Security
    # If "recommended" is "true", users using older releases are encouraged
    # to update as soon as possible. This is useful if, for example, this release
    # fixes a critical issue.
    recommended: true

  # Image declaration is required here. Refer to the Images section below.
  images:
    cert-manager-controller:
      properties:
        cert-manager.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.image.tag:
          type: TAG
    cert-manager-webhook:
      properties:
        cert-manager.webhook.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.webhook.image.tag:
          type: TAG
    cert-manager-cainjector:
      properties:
        cert-manager.cainjector.image.repository:
          type: REPO_WITH_REGISTRY
        cert-manager.cainjector.image.tag:
          type: TAG
    cert-manager-google-cas-issuer:
      properties:
        google-cas-issuer.image.repository:
          type: REPO_WITH_REGISTRY
        google-cas-issuer.image.tag:
          type: TAG
    cert-manager-preflight:
      properties:
        preflight.image.repository:
          type: REPO_WITH_REGISTRY
        preflight.image.tag:
          type: TAG
    ubbagent:
      properties:
        ubbagent.image.repository:
          type: REPO_WITH_REGISTRY
        ubbagent.image.tag:
          type: TAG

  # Allow the deployer to create CRDs and webhook configurations
  # See https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/master/docs/schema.md#deployerserviceaccount
  # TODO: Consider whether these permissions can be tightened.
  deployerServiceAccount:
    description: >
      Creates app resources, including the MyAppCustomResource CRD.
    roles:
      - type: ClusterRole
        rulesType: CUSTOM
        rules:
          - apiGroups: ["apiextensions.k8s.io"]
            resources: ["customresourcedefinitions"]
            verbs: ["*"]
          - apiGroups: ["admissionregistration.k8s.io"]
            resources: ["*"]
            verbs: ["*"]

  # Other fields, like clusterConstraints, can be included here.

# The Properties and Required sections of v2 are structured the same as those of v1.
properties:
  name:
    type: string
    x-google-marketplace:
      type: NAME
  namespace:
    type: string
    x-google-marketplace:
      type: NAMESPACE
  cert-manager.serviceAccount.name:
    type: string
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by cert-manager Controller Deployment
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              # Issuer controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["issuers", "issuers/status"]
                verbs: ["update"]
              - apiGroups: ["cert-manager.io"]
                resources: ["issuers"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch", "create", "update", "delete"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # ClusterIssuer controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["clusterissuers", "clusterissuers/status"]
                verbs: ["update"]
              - apiGroups: ["cert-manager.io"]
                resources: ["clusterissuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch", "create", "update", "delete"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # Certificates controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
                verbs: ["update"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates/finalizers", "certificaterequests/finalizers"]
                verbs: ["update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders"]
                verbs: ["create", "delete", "get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch", "create", "update", "delete"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # Orders controller role
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders", "orders/status"]
                verbs: ["update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders", "challenges"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["cert-manager.io"]
                resources: ["clusterissuers", "issuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges"]
                verbs: ["create", "delete"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["orders/finalizers"]
                verbs: ["update"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              # Challenges controller role
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges", "challenges/status"]
                verbs: ["update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["cert-manager.io"]
                resources: ["issuers", "clusterissuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              - apiGroups: [""]
                resources: ["pods", "services"]
                verbs: ["get", "list", "watch", "create", "delete"]
              - apiGroups: ["extensions"]
                resources: ["ingresses"]
                verbs: ["get", "list", "watch", "create", "delete", "update"]
              - apiGroups: ["acme.cert-manager.io"]
                resources: ["challenges/finalizers"]
                verbs: ["update"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              # ingress-shim controller role
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests"]
                verbs: ["create", "update", "delete"]
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["extensions"]
                resources: ["ingresses"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["extensions"]
                resources: ["ingresses/finalizers"]
                verbs: ["update"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["create", "patch"]
              - apiGroups: [""]
                resources: ["configmaps"]
                verbs: ["get", "create", "update", "patch"]

  cert-manager.webhook.serviceAccount.name:
    type: string
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by cert-manager Webhook Deployment
        roles:
          - type: Role
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: [secrets]
                verbs: [get, list, update, patch, create]

  cert-manager.cainjector.serviceAccount.name:
    type: string
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by cert-manager CA Injector Deployment
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: ["cert-manager.io"]
                resources: ["certificates"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources: ["events"]
                verbs: ["get", "create", "update", "patch"]
              - apiGroups: ["admissionregistration.k8s.io"]
                resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: ["apiregistration.k8s.io"]
                resources: ["apiservices"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: ["apiextensions.k8s.io"]
                resources: ["customresourcedefinitions"]
                verbs: ["get", "list", "watch", "update"]
              - apiGroups: [""]
                resources: ["configmaps"]
                verbs: ["get", "create", "update", "patch"]

  google-cas-issuer.serviceAccount.name:
    type: string
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by google-cas-issuer
        roles:
          - type: Role
            rulesType: CUSTOM
            rules:
              # Leader election roles.
              - apiGroups: [""]
                resources: [configmaps]
                verbs: [get, list, watch, create, update, patch, delete]
              - apiGroups: [""]
                resources: [configmaps/status]
                verbs: [get, update, patch]
              - apiGroups: [""]
                resources: [events]
                verbs: [create]
              - apiGroups: [coordination.k8s.io]
                resources: [leases]
                verbs: [create, get, list, update]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: [events]
                verbs: [create, patch]
              - apiGroups: [""]
                resources: [secrets]
                verbs: [get, list, watch]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasclusterissuers]
                verbs: [create, delete, get, list, patch, update, watch]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasclusterissuers/status]
                verbs: [get, patch, update]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasissuers]
                verbs: [create, delete, get, list, patch, update, watch]
              - apiGroups: [cas-issuer.jetstack.io]
                resources: [googlecasissuers/status]
                verbs: [get, patch, update]
              - apiGroups: [cert-manager.io]
                resources: [certificaterequests]
                verbs: [get, list, update, watch]
              - apiGroups: [cert-manager.io]
                resources: [certificaterequests/status]
                verbs: [get, patch, update]

  preflight.serviceAccount.name:
    type: string
    x-google-marketplace:
      type: SERVICE_ACCOUNT
      serviceAccount:
        description: Service account used by preflight
        roles:
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: ["nodes"]
                verbs: ["get", "list"]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: [""]
                resources: ["secrets"]
                verbs: ["get", "list"]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: ["cert-manager.io"]
                resources:
                  - certificates
                  - certificaterequests
                  - issuers
                  - clusterissuers
                verbs: ["get", "list"]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: ["cas-issuer.jetstack.io"]
                resources:
                  - googlecasissuers
                  - googlecasclusterissuers
                verbs: ["get", "list"]
          - type: ClusterRole
            rulesType: CUSTOM
            rules:
              - apiGroups: ["admissionregistration.k8s.io"]
                resources:
                  - validatingwebhookconfigurations
                  - mutatingwebhookconfigurations
                verbs: ["get", "list"]

  # https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/64181be/docs/billing-integration.md
  ubbagent.reportingSecretName:
    type: string
    x-google-marketplace:
      type: REPORTING_SECRET

required:
  - name
  - namespace
